{
    "execution_time": "59.47", 
    "tests": [
        {
            "output": "<pydrake.solvers._mathematicalprogram_py.MathematicalProgram object at 0x7fe7c3b2cb70>\nSolutionResult.kSolutionFound\n<pydrake.solvers._mathematicalprogram_py.MathematicalProgram object at 0x7fe7c3b2cb70>\nSolutionResult.kSolutionFound\n<pydrake.solvers._mathematicalprogram_py.MathematicalProgram object at 0x7fe7c3b2cb70>\nSolutionResult.kSolutionFound\n<pydrake.solvers._mathematicalprogram_py.MathematicalProgram object at 0x7fe7c3b2cb70>\nSolutionResult.kSolutionFound\n", 
            "score": 1, 
            "max_score": 1, 
            "name": "Run a few trajectory optimizations, and check that they return under the time limit (40 seconds total)"
        }, 
        {
            "score": 1, 
            "max_score": 1, 
            "name": "Check that the original parameters have not been changed"
        }, 
        {
            "score": 4, 
            "max_score": 4, 
            "name": "Check that the system approximately obeys the original dynamics"
        }, 
        {
            "output": "Used these amounts of fuel consumption on the four tests: \n[7.9825293331481042, 19.072437258099384, 16.920285235790285, 9.098556823296466]\n", 
            "score": 4, 
            "max_score": 4, 
            "name": "Check that the trajectory was reasonably efficient with fuel use"
        }, 
        {
            "score": 10, 
            "max_score": 10, 
            "name": "Check that the initial state is valid"
        }, 
        {
            "score": 10, 
            "max_score": 10, 
            "name": "Check that the trajectory satisfied the specified orbit constraint"
        }, 
        {
            "score": 4, 
            "max_score": 4, 
            "name": "Check that the time_array is valid"
        }, 
        {
            "score": 10, 
            "max_score": 10, 
            "name": "Verify that the hopper keeps hopping for 10s"
        }, 
        {
            "score": 5, 
            "max_score": 5, 
            "name": "Verify that the hopper tracks a desired lateral velocity"
        }, 
        {
            "score": 5, 
            "max_score": 5, 
            "name": "Verify that the hopper stabilizes both hopping and theta"
        }, 
        {
            "score": 1, 
            "max_score": 1, 
            "name": "Verify the signature of ChooseThighTorque"
        }
    ], 
    "score": 55, 
    "visibility": "visible", 
    "leaderboard": []
}
